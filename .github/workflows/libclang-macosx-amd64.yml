name: libclang-macosx-amd64

on: [push, pull_request]

jobs:
  build-and-deploy:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: get llvm-project
      run: |
        wget https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.1/llvm-project-10.0.1.tar.xz
        tar xf llvm-project-10.0.1.tar.xz
    - name: make build directory
      run: mkdir -p llvm-project-10.0.1/build
    - name: cmake
      run: cd llvm-project-10.0.1/build && cmake ../llvm -DLLVM_ENABLE_PROJECTS=clang -DBUILD_SHARED_LIBS=OFF -DLLVM_TARGETS_TO_BUILD=X86 -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_CXX_FLAGS_MINSIZEREL="-Os -s -DNDEBUG -static-libgcc -static-libstdc++" -DCMAKE_C_COMPILER=gcc-8 -DCMAKE_CXX_COMPILER=g++-8 -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9
    - name: build
      run: cd llvm-project-10.0.1/build && make libclang -j$(sysctl -n hw.ncpu)
    - name: print dependencies
      run: otool -L llvm-project-10.0.1/build/lib/libclang.dylib
    - name: rename output binary
      run: |
        cd llvm-project-10.0.1/build/lib
        mv libclang.dylib libclang.dylib.10.macosx-amd64
    - name: create and print sha512sum
      run: |
        cd llvm-project-10.0.1/build/lib
        shasum -a512 libclang.dylib.10.macosx-amd64 > libclang.dylib.10.macosx-amd64.sha512sum
        echo "Checksum is: "
        cat libclang.dylib.10.macosx-amd64.sha512sum
    - uses: actions/upload-artifact@v2
      with:
        name: libclang.dylib.10.macosx-amd64
        path: llvm-project-10.0.1/build/lib/libclang.dylib.10.macosx-amd64
